spring:
  application:
    name: daily
  datasource:
    druid:
      #SQL请求超时时间，一次SQL请求如果在该时间内没有返回任何数据，操作系统会抛出 Read timeout 的异常
      socket-timeout: 9000
      #创建数据库连接超时时间
      connect-timeout: 3000
      #连接key-value参数
      connection-properties: config.decrypt=true;config.decrypt.key=${pubKey}
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/poscom?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true
      username: root
      password: czoIUIMGw79NIiVhEQt2uKvNi2D/oVZnaD+1U+aVlgpOXghAuiI3o3r9S9yySmFTF/U2d8oozB/CyMKxel4xng==
      #初始化连接数
      initial-size: 5
      #最小连接数
      min-idle: 5
      #最大连接数
      max-active: 10
      #空闲连接的最大分钟，超过则会被销毁
      idle-timeout-minutes: 10
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-while-idle: true
      #请连接时执行validationQuery检测连接是否有效
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效
      test-on-return: false
      #用来检测连接是否有效的sql
      validation-query: select 1
      filter:
        config:
          enabled: true
server:
  port: 9080
# springdoc-openapi配置
springdoc:
  swagger-ui:
    #自定义swagger前端请求路径，输入http：127.0.0.1:8080/swagger-ui.html会自动重定向到swagger页面
    path: /swagger-ui.html
    tags-sorter: alpha # 标签的排序方式 alpha:按照子母顺序排序（@ApiSupport注解排序不生效，因此需要设置）
    operations-sorter: alpha # 接口的排序方式 alpha:按照子母顺序排序（@ApiOperationSupport注解排序生效，因此这里不作设置）
  # 启用文档，默认开启
  api-docs:
    path: /v3/api-docs    #swagger后端请求地址
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.linzi.daily
# knife4j相关配置 可以不用改
knife4j:
  #开启knife4j增强，访问后缀改成：doc.html
  enable: true
  setting:
    # 中文:ZH_CN 英文:EN
    language: zh_cn
  production: false
############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 300
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: random-64
  # 是否输出操作日志
  is-log: true
############### mybatisplus 配置 ################
pubKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANKApOS+ZjIGKjzr6hYzRzmYD7fBT99mCStOuBbpM0A0Lpti84tEyybHBaCdBpMx3oisFbCVtyMebMgRfJET3YsCAwEAAQ==
mybatis-plus:
  configuration:
    # 将sql打印到控制台
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl